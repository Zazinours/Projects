<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbxRaquette.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YfL0z0n5f5vsDGX6/e3+AAAAAElFTkSuQmCC
</value>
  </data>
</root>